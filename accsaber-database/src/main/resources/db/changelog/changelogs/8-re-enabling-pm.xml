<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.1.xsd">

  <changeSet id="re-enabling-pro-mode" author="ixsen">
    <dropProcedure procedureName="recalc_player_ap"/>
    <dropProcedure procedureName="rank_scores"/>
    <dropProcedure procedureName="recalc_all_ap"/>

    <sql endDelimiter="/">
      create procedure recalc_player_ap(id_of_player LONG)
      begin
      update score_data sd, (select leaderboard_id, max_score, complexity, category_id from beat_map) map
      set sd.is_ranked_score = true,
        sd.accuracy = (sd.score / map.max_score),
        sd.ap = calc_ap((sd.score / map.max_score) * 100.0, complexity, map.category_id)
      where (sd.mods is null or not (sd.mods like "%SC%") or time_set &lt; "2021-09-13 00:00:00")
        and sd.map_leaderboard_id = map.leaderboard_id
        and sd.player_id = id_of_player;

      call recalc_weighted_ap_for_player(id_of_player);
      call recalc_player_category_stats(id_of_player);
      end;
      /
    </sql>
    <sql endDelimiter="/">
      create procedure rank_scores(leaderboard_id LONG, maxScore LONG, complexity DOUBLE)
      begin
      select category_id
      into @category
      from beat_map bm
      where bm.leaderboard_id = leaderboard_id;

      update score_data sd
      set sd.is_ranked_score = true,
          sd.accuracy        = (sd.score / maxScore),
          sd.ap              = calc_ap((sd.score / maxScore) * 100.0, complexity, @category)
      where (sd.mods is null or not (sd.mods like "%SC%") or time_set &lt; "2021-09-13 00:00:00")
        and sd.map_leaderboard_id = leaderboard_id;

      call recalc_weighted_ap(@category);
      call recalc_all_category_stats();
      end;
      /
    </sql>
    <sql endDelimiter="/">
      create procedure recalc_all_ap()
      begin
      update score_data set is_ranked_score = false where is_ranked_score = true;
      update score_data sd, (select leaderboard_id, max_score, complexity, category_id from beat_map) map
      set sd.is_ranked_score = true,
        sd.accuracy = (sd.score / map.max_score),
        sd.ap = calc_ap((sd.score / map.max_score) * 100.0, map.complexity, map.category_id)
      where (sd.mods is null or not (sd.mods like "%SC%") or time_set &lt; "2021-09-13 00:00:00") and sd.map_leaderboard_id = map.leaderboard_id;

      call recalc_all_weighted_ap();
      call recalc_all_category_stats();
      end;
      /
    </sql>
  </changeSet>
</databaseChangeLog>